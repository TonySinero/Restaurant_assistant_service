name: CI

on:
  push:
    branches:
      - development

env:
  REGISTRY: "registry.digitalocean.com/malkev1ch"
  IMAGE_NAME: "restaurant-assistant-stage"
  CONTAINER_NAME: "restaurant-assistant-stage"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout development
        uses: actions/checkout@v2

      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Test
        run: go test ./...

  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout development
        uses: actions/checkout@v2

      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

  copy_migrations:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - uses: actions/checkout@master
      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          overwrite: true
          source: "migrations/000001_sql.down.sql, migrations/000001_sql.up.sql"
          target: "restaurant-assistant"

  deploy:
    runs-on: ubuntu-latest
    needs: copy_migrations
    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,CONTAINER_NAME
          script: |
            # Set env variables
            export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            export STORAGE_ACCESS_KEY=${{ secrets.STORAGE_ACCESS_KEY }}
            export STORAGE_SECRET_KEY=${{ secrets.STORAGE_SECRET_KEY }}

            # Login into Digital Ocean Registry
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} $(echo $REGISTRY)

            # Stop running container
            docker stop $(echo $CONTAINER_NAME)

            # Remove old container
            docker rm $(echo $CONTAINER_NAME)

            # Run a new container from a new image
            docker run -e DB_PASSWORD -e STORAGE_SECRET_KEY -e STORAGE_ACCESS_KEY -d \
            --name $(echo $CONTAINER_NAME) \
            --restart always \
            -p 58080:50080 \
            -p 8080:80 \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

             # apply migrations
            cd ./restaurant-assistant
            make migrateDown
            make migrateUp

